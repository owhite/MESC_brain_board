int sw1; // measures the switch status
int sw2;


int SpkrPin = 4;
int LEDPin1 = 13;
int LED1_r = 10;
int LED1_g = 9;
int LED2_r = 22;
int LED2_g = 23;
int LED3_r = 20;
int LED3_g = 21;
int SWPin1 = 11;
int SWPin2 = 12;


void LED_OFF (int L_r, int L_g) {
  digitalWrite(L_r, HIGH);
  digitalWrite(L_g, HIGH);
}

void LED_GO (int L_r, int L_g) {
  digitalWrite(L_r, LOW);
  digitalWrite(L_g, HIGH);
}

void LED_STOP (int L_r, int L_g) {
  digitalWrite(L_r, HIGH);
  digitalWrite(L_g, LOW);
}

void rotateRt() {
  LED_STOP(LED1_r, LED1_g);
  delayMicroseconds(200); // here because switch was hit, debounce
  sw1 = HIGH;

  int count = 0;
  while (sw1 == HIGH) {
    sw1 = digitalRead(SWPin1);
  }

  LED_OFF(LED1_r, LED1_g);
  delayMicroseconds(400000); // snooze before ending
}

void rotateLt() {
  LED_STOP(LED3_r, LED3_g);
  delayMicroseconds(200); // here because switch was hit, debounce
  sw2 = HIGH;

  int count = 0;
  while (sw2 == HIGH) {
    sw2 = digitalRead(SWPin2);
  }

  LED_OFF(LED3_r, LED3_g);
  delayMicroseconds(400000); // snooze before ending
}


void setup() {

  pinMode(SWPin1, INPUT);
  pinMode(SWPin2, INPUT);
  pinMode(LED1_r, OUTPUT);
  pinMode(LED1_g, OUTPUT);
  pinMode(LED2_r, OUTPUT);
  pinMode(LED2_g, OUTPUT);
  pinMode(LED3_r, OUTPUT);
  pinMode(LED3_g, OUTPUT);

  digitalWrite(LED1_r, HIGH);
  digitalWrite(LED1_g, HIGH);
  digitalWrite(LED2_r, HIGH);
  digitalWrite(LED2_g, HIGH);
  digitalWrite(LED3_r, HIGH);
  digitalWrite(LED3_g, HIGH);

  attachInterrupt(SWPin1, rotateLt, CHANGE);
  attachInterrupt(SWPin2, rotateRt, CHANGE);

}

void loop() {
  __asm__("nop\n\t");  
}
